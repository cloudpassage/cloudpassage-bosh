#!/bin/bash

RUN_DIR=/var/vcap/sys/run/cp_halo
PIDFILE=$RUN_DIR/cphalo.pid

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

# Setup env vars and folders for the webapp_ctl script
source /var/vcap/jobs/cp_halo/helpers/ctl_setup.sh 'cp_halo'

install_deb() {
    server_label=$1
    echo 'deb https://production.packages.cloudpassage.com/debian debian main' >> cloudpassage.list
    mv cloudpassage.list  /etc/apt/sources.list.d/. >> $LOG_DIR/$JOB_NAME.log 2>&1
    apt-get -y install curl >> $LOG_DIR/$JOB_NAME.log 2>&1
    apt-get install -y apt-transport-https --force-yes >> $LOG_DIR/$JOB_NAME.log 2>&1
    curl https://production.packages.cloudpassage.com/cloudpassage.packages.key | sudo apt-key add - >> $LOG_DIR/$JOB_NAME.log 2>&1
    apt-get update > /dev/null >> $LOG_DIR/$JOB_NAME.log 2>&1
    apt-get -y install cphalo >> $LOG_DIR/$JOB_NAME.log 2>&1
    /opt/cloudpassage/bin/configure --agent-key=$AGENT_KEY --grid=https://grid.cloudpassage.com/grid --server-label=$server_label $tag >> $LOG_DIR/$JOB_NAME.log 2>&1
    /etc/init.d/cphalod start >> $LOG_DIR/$JOB_NAME.log 2>&1
    pidof cphalo > $PIDFILE
}

install_yum() {
    server_label=$1
    echo -e '[cloudpassage]\nname=CloudPassage\nbaseurl=https://production.packages.cloudpassage.com/redhat/$basearch\ngpgcheck=1' | sudo tee /etc/yum.repos.d/cloudpassage.repo > /dev/null >> $LOG_DIR/$JOB_NAME.log 2>&1
    sudo rpm --import https://production.packages.cloudpassage.com/cloudpassage.packages.key >> $LOG_DIR/$JOB_NAME.log 2>&1
    sudo yum list >> $LOG_DIR/$JOB_NAME.log 2>&1
    sudo yum -y install cphalo > /dev/null >> $LOG_DIR/$JOB_NAME.log 2>&1
    sudo /opt/cloudpassage/bin/configure --agent-key=$AGENT_KEY --grid=https://grid.cloudpassage.com/grid --server-label=$server_label $tag >> $LOG_DIR/$JOB_NAME.log 2>&1
    sudo /etc/init.d/cphalod start >> $LOG_DIR/$JOB_NAME.log 2>&1
    pidof cphalo > $PIDFILE
}

case $1 in

  start)
    platform="$(cat /etc/*-release | grep -w ID)"
    if [ $AWS_SERVER_LABEL == 0 ]  ; then
        account_id=$(curl -fs http://169.254.169.254/latest/dynamic/instance-identity/document/ | python -c "import json,sys;obj=json.load(sys.stdin);print obj['accountId']")
        instance_id=$(curl -fs http://169.254.169.254/latest/dynamic/instance-identity/document/ | python -c "import json,sys;obj=json.load(sys.stdin);print obj['instanceId']")
        server_label=$account_id\_$instance_id
    elif [ $AZURE_ID != '' ] ; then
        hostname="$(hostname)"
        server_label=$AZURE_ID\_$hostname
    else
        server_label="$(hostname)"
    fi

    if [ -z "$SERVER_TAG" ] ; then
        tag=""
    else
        tag="--tag=$SERVER_TAG"
    fi

    if [[ $platform == *"ubuntu"* || $platform == *"debian"* ]]; then
        install_deb $server_label $tag
    else
        install_yum $server_label $tag
    fi

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Usage: install_ctl {start|stop}"

    ;;

esac
exit 0
